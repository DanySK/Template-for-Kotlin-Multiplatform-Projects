name: CI/CD Process

on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'master') }}

jobs:
  check-secrets:
    runs-on: ubuntu-24.04
    outputs:
      run-with-secrets: ${{ steps.require-secrets.outputs.run-with-secrets }}
    steps:
      - name: Find if secrets are available
        id: detect-secrets
        uses: DanySK/are-secrets-available@1.0.0
        with:
          secrets: ${{ toJson(secrets) }}
      - name: Set condition
        id: require-secrets
        run: |
          echo "run-with-secrets=${{ steps.detect-secrets.outputs.has-secrets == 'true' && !github.event.repository.fork }}" >> $GITHUB_OUTPUT

  staging-repo:
    runs-on: ubuntu-24.04
    needs:
      - check-secrets
    if: needs.check-secrets.outputs.run-with-secrets == 'true'
    outputs:
      maven-central-repo-id: ${{ steps.staging-repo.outputs.MavenCentral }}
      next-version: ${{ steps.compute-next-version.outputs.next-version }}
      will-release: ${{ steps.compute-next-version.outputs.will-release }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0
      - name: Compute next release version
        id: compute-next-version
        uses: nicolasfara/precompute-semantic-release-version-action@2.0.1
        with:
          github-token: ${{ github.token }}
      - uses: DanySK/build-check-deploy-gradle-action@3.5.9
        with:
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          should-run-codecov: false
          should-deploy: true
          build-command: true
          check-command: true
          deploy-command: |
            if [[ "${{ steps.compute-next-version.outputs.will-release }}" == "true" ]]; then
              ./gradlew -PforceVersion="${{ steps.compute-next-version.outputs.next-version }}" createStagingRepositoryOnMavenCentral --parallel
            else
              ./gradlew createStagingRepositoryOnMavenCentral --parallel
            fi
      - name: Save staging repository ID
        id: staging-repo
        run: |
          [[ -f build/staging-repo-ids.properties ]] || (
            echo "Staging repositories ID file not found" &&
            exit 1
          )
          REPO_IDS=$(cat build/staging-repo-ids.properties)
          echo "Staging repositories IDs:\n$REPO_IDS"
          echo $REPO_IDS >> $GITHUB_OUTPUT

  build:
    needs:
      - check-secrets
      - staging-repo
    if: always() && !contains(needs.staging-repo.result, 'failure')
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, macos-14, ubuntu-24.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.20
      - uses: DanySK/build-check-deploy-gradle-action@3.5.9
        with:
          deploy-command: |
            # Stop gradle on windows
            ruby -e 'if /^windows-\w+$/ =~ "${{ matrix.os }}" then puts `./gradlew --stop` end'
            NEXT_VERSION="${{ needs.staging-repo.outputs.next-version }}"
            OVERRIDE_VERSION=$([[ "$NEXT_VERSION" != "" ]] && echo "-PforceVersion=$(echo $NEXT_VERSION)" || echo "")
            ./gradlew $OVERRIDE_VERSION -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} uploadAll --parallel
          should-run-codecov: ${{ runner.os == 'Linux' }}
          should-deploy: ${{ contains(needs.staging-repo.result, 'success') }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  close-staging-repos:
    needs:
      - staging-repo
      - build
    runs-on: ubuntu-24.04
    if: needs.check-secrets.outputs.run-with-secrets == 'true'
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4.2.0
      - uses: DanySK/build-check-deploy-gradle-action@3.5.9
        with:
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          should-run-codecov: false
          should-deploy: true
          build-command: true
          check-command: true
          deploy-command: |
            ./gradlew -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} close --parallel
            if [[ "${{ needs.staging-repo.outputs.will-release }}" == "false" ]]; then
              ./gradlew -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} drop
            fi

  release:
    concurrency:
      # Only one release job at a time per branch, as only master releases.
      # Strictly sequential.
      group: release-${{ github.workflow }}-${{ github.event.number || github.ref }}
      cancel-in-progress: false
    needs:
      - check-secrets
      - staging-repo
      - build
      - close-staging-repos
    runs-on: ubuntu-24.04
    if: needs.check-secrets.outputs.run-with-secrets == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.0
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Install Node
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: package.json
      - uses: DanySK/build-check-deploy-gradle-action@3.5.9
        env:
          STAGING_REPO_ID: ${{ needs.staging-repo.outputs.maven-central-repo-id }}
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          npm-token: ${{ secrets.NPM_TOKEN }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  success:
    runs-on: ubuntu-24.04
    needs:
      - check-secrets
      - staging-repo
      - close-staging-repos
      - release
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
